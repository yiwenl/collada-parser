{"version":3,"sources":["../src/ColladaParser.js"],"names":["parseData","mData","console","log","materials","meshes","finalMeshes","meshObjs","allMeshes","s","oMesh","vertices","normals","coords","triangles","buffers","push","id","getMaterial","mat","oMaterial","diffuse","diffuseColor","shininess","textures","diffuseMapID","map_id","normal","normalMapID","walk","node","mtxParent","m","create","model","multiply","copy","children","length","forEach","child","mesh","modelMatrix","name","material","mtx","root","parse","mFile","o","load","mPath","mCallBack","ColladaParser"],"mappings":"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","file":"ColladaParser.js","sourcesContent":["// ColladaParser.js\n\nimport Collada from './Collada';\nimport { mat4 } from 'gl-matrix';\n\n\nconst parseData = function(mData) {\n\tconsole.log('Data :', mData);\n\n\tconst { materials, meshes } = mData;\n\n\tconst finalMeshes = [];\n\tconst meshObjs    = [];\n\tconst allMeshes  = [];\n\n\t//\tgetting all meshes' buffers\n\tfor(let s in meshes) {\n\t\tconst oMesh = meshes[s];\n\t\tconst { vertices, normals, coords, triangles } = oMesh;\n\t\tconst buffers = {\n\t\t\tvertices, normals, coords, triangles\n\t\t}\n\t\tallMeshes.push({\n\t\t\tid:s,\n\t\t\tbuffers\n\t\t});\n\t}\n\n\tfunction getMaterial(id) {\n\t\tlet mat;\n\t\tfor(let s in materials ) {\n\t\t\tif(s === id) {\n\t\t\t\tmat = materials[s];\n\t\t\t}\n\t\t}\n\n\n\t\tlet oMaterial = {};\n\t\tif(mat.diffuse) {\n\t\t\toMaterial.diffuseColor = mat.diffuse;\n\t\t}\n\n\t\toMaterial.diffuseColor = mat.diffuse || [0, 0, 0];\n\t\toMaterial.shininess = mat.shininess || 0;\n\t\tif(mat.textures) {\n\t\t\tif(mat.textures.diffuse) {\n\t\t\t\toMaterial.diffuseMapID = mat.textures.diffuse.map_id;\n\t\t\t}\n\n\t\t\tif(mat.textures.normal) {\n\t\t\t\toMaterial.normalMapID = mat.textures.normal.map_id;\n\t\t\t}\n\t\t}\n\n\t\treturn oMaterial;\n\t}\n\n\tfunction walk(node, mtxParent) {\n\t\tlet m = mat4.create();\n\t\tif(node.model) {\n\t\t\tmat4.multiply(m, mtxParent, node.model);\n\t\t} else {\n\t\t\tmat4.copy(m, mtxParent);\n\t\t}\n\n\t\tif(node.children.length > 0) {\n\t\t\tnode.children.forEach((child)=> {\n\t\t\t\twalk(child, m);\n\t\t\t});\n\t\t}\n\n\t\tif(node.mesh) {\n\t\t\tconst oMesh       = {};\n\t\t\toMesh.modelMatrix = m;\n\t\t\toMesh.mesh        = meshes[node.mesh];\n\t\t\toMesh.id          = node.id;\n\t\t\toMesh.name        = node.name;\n\t\t\toMesh.material    = getMaterial(node.material);\n\t\t\tmeshObjs.push(oMesh);\n\t\t}\n\t}\n\n\tlet mtx = mat4.create();\n\twalk(mData.root, mtx);\n\n\treturn meshObjs;\n}\n\nconst parse = function(mFile) {\n\tconst o = Collada.parse(mFile);\n\treturn parseData(o);\n}\n\nconst load = function(mPath, mCallBack) {\n\tCollada.load(mPath, (mData)=> {\n\t\tmCallBack(parseData(mData));\n\t});\n}\n\nconst ColladaParser = {\n\tload,\n\tparse\n}\n\nexport default ColladaParser;"]}